     1 00000000                                 ; haribote-os boot asm
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4  = 00280000                              BOTPAK	EQU		0x00280000		; bootpack의 로드 장소
     5  = 00100000                              DSKCAC	EQU		0x00100000		; 디스크 캐쉬 프로그램의 장소
     6  = 00008000                              DSKCAC0	EQU		0x00008000		; 디스크 캐쉬 프로그램의 장소(리얼모드)
     7 00000000                                 
     8 00000000                                 ; BOOT_INFO 관계
     9  = 00000FF0                              CYLS	EQU		0x0ff0			; boot sector가 설정한다
    10  = 00000FF1                              LEDS	EQU		0x0ff1
    11  = 00000FF2                              VMODE	EQU		0x0ff2			; 색 가지수에 관한 정보.어떤 비트 칼라인가?
    12  = 00000FF4                              SCRNX	EQU		0x0ff4			; 해상도의 X
    13  = 00000FF6                              SCRNY	EQU		0x0ff6			; 해상도의 Y
    14  = 00000FF8                              VRAM	EQU		0x0ff8			; 그래픽 버퍼의 개시 번지
    15 00000000                                 
    16                                          		ORG		0xc200		; 이 프로그램이 어디에 Read되는가
    17 0000C200                                 
    18 0000C200                                 ; 화면 모드를 설정
    19 0000C200                                 
    20 0000C200 B0 13                           		MOV		AL, 0x13	; VGA 그래픽스, 320 x200x8bit 칼라
    21 0000C202 B4 00                           		MOV		AH,0x00
    22 0000C204 CD 10                           		INT		0x10
    23 0000C206 C6 06 0FF2 08                   		MOV		BYTE [VMODE], 8	; 화면 모드를 메모 한다(C언어가 참조한다)
    24 0000C20B C7 06 0FF4 0140                 		MOV		WORD [SCRNX],320
    25 0000C211 C7 06 0FF6 00C8                 		MOV		WORD [SCRNY],200
    26 0000C217 66 C7 06 0FF8 000A0000          		MOV		DWORD [VRAM],0x000a0000
    27 0000C220                                 
    28 0000C220                                 ; 키보드의 LED 상태를 BIOS가 가르쳐 준다
    29 0000C220                                 
    30 0000C220 B4 02                           		MOV		AH,0x02
    31 0000C222 CD 16                           		INT		0x16 		; keyboard BIOS
    32 0000C224 A2 0FF1                         		MOV		[LEDS],AL
    33 0000C227                                 
    34 0000C227                                 ; PIC가 일절의 세치기를 받아들이지 않게 한다
    35 0000C227                                 ;	AT호환기의 사양에서는, PIC의 초기화를 한다면,
    36 0000C227                                 ;	진한 개를 CLI앞에 해 두지 않으면 이따금 행업 한다
    37 0000C227                                 ;	PIC의 초기화는 나중에 한다
    38 0000C227                                 
    39 0000C227 B0 FF                           		MOV		AL,0xff
    40 0000C229 E6 21                           		OUT		0x21,AL
    41 0000C22B 90                              		NOP				; OUT 명령을 연속하면 잘 되지 않는 기종이 있는 것 같기 때문에
    42 0000C22C E6 A1                           		OUT		0xa1,AL
    43 0000C22E                                 
    44 0000C22E FA                              		CLI				; CPU 레벨에서도 인터럽트 금지
    45 0000C22F                                 
    46 0000C22F                                 ; CPU로부터 1MB이상의 메모리에 액세스 할 수 있도록, A20GATE를 설정
    47 0000C22F                                 
    48 0000C22F E8 00B5                         		CALL	waitkbdout
    49 0000C232 B0 D1                           		MOV		AL,0xd1
    50 0000C234 E6 64                           		OUT		0x64,AL
    51 0000C236 E8 00AE                         		CALL	waitkbdout
    52 0000C239 B0 DF                           		MOV		AL, 0xdf	; enable A20
    53 0000C23B E6 60                           		OUT		0x60,AL
    54 0000C23D E8 00A7                         		CALL	waitkbdout
    55 0000C240                                 
    56 0000C240                                 ; 프로텍트 모드 이행
    57 0000C240                                 
    58 0000C240                                 [INSTRSET "i486p"]				; 486명령까지 사용하고 싶다고 하는 기술
    59 0000C240                                 
    60 0000C240 0F 01 16 C32A                   		LGDT	[GDTR0]			; 잠정 GDT를 설정
    61 0000C245 0F 20 C0                        		MOV		EAX,CR0
    62 0000C248 66 25 7FFFFFFF                  		AND		EAX, 0x7fffffff	; bit31를 0으로 한다(페이징 금지를 위해)
    63 0000C24E 66 83 C8 01                     		OR		EAX, 0x00000001	; bit0를 1로 한다(프로텍트 모드 이행이므로)
    64 0000C252 0F 22 C0                        		MOV		CR0,EAX
    65 0000C255 EB 00                           		JMP		pipelineflush
    66 0000C257                                 pipelineflush:
    67 0000C257 B8 0008                         		MOV		AX,1*8		; read, write 가능 세그먼트(segment) 32bit
    68 0000C25A 8E D8                           		MOV		DS,AX
    69 0000C25C 8E C0                           		MOV		ES,AX
    70 0000C25E 8E E0                           		MOV		FS,AX
    71 0000C260 8E E8                           		MOV		GS,AX
    72 0000C262 8E D0                           		MOV		SS,AX
    73 0000C264                                 
    74 0000C264                                 ; bootpack의 전송
    75 0000C264                                 
    76 0000C264 66 BE 0000C330                  		MOV		ESI, bootpack	; 전송원
    77 0000C26A 66 BF 00280000                  		MOV		EDI, BOTPAK	; 전송처
    78 0000C270 66 B9 00020000                  		MOV		ECX,512*1024/4
    79 0000C276 E8 0077                         		CALL	memcpy
    80 0000C279                                 
    81 0000C279                                 ; 하는 김에 디스크 데이터도 본래의 위치에 전송
    82 0000C279                                 
    83 0000C279                                 ; 우선은 boot sector로부터
    84 0000C279                                 
    85 0000C279 66 BE 00007C00                  		MOV		ESI, 0x7c00	; 전송원
    86 0000C27F 66 BF 00100000                  		MOV		EDI, DSKCAC	; 전송처
    87 0000C285 66 B9 00000080                  		MOV		ECX,512/4
    88 0000C28B E8 0062                         		CALL	memcpy
    89 0000C28E                                 
    90 0000C28E                                 ; 나머지 전부
    91 0000C28E                                 
    92 0000C28E 66 BE 00008200                  		MOV		ESI, DSKCAC0+512; 전송원
    93 0000C294 66 BF 00100200                  		MOV		EDI, DSKCAC+512	; 전송처
    94 0000C29A 66 B9 00000000                  		MOV		ECX,0
    95 0000C2A0 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
    96 0000C2A4 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; 실린더수로부터 바이트수/4에 변환
    97 0000C2AB 66 81 E9 00000080               		SUB		ECX,512/4	; IPL분만큼 공제한다
    98 0000C2B2 E8 003B                         		CALL	memcpy
    99 0000C2B5                                 
   100 0000C2B5                                 ; asmhead로 해야 하는 것은 전부 다 했으므로,
   101 0000C2B5                                 ;	나머지는 bootpack에 맡긴다
   102 0000C2B5                                 
   103 0000C2B5                                 ; bootpack의 기동
   104 0000C2B5                                 
   105 0000C2B5 66 BB 00280000                  		MOV		EBX,BOTPAK
   106 0000C2BB 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   107 0000C2C0 66 83 C1 03                     		ADD		ECX, 3		; ECX += 3;
   108 0000C2C4 66 C1 E9 02                     		SHR		ECX, 2		; ECX /= 4;
   109 0000C2C8 74 10                           		JZ		skip		; 전송 해야 할 것이 없다
   110 0000C2CA 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 전송원
   111 0000C2CF 66 01 DE                        		ADD		ESI,EBX
   112 0000C2D2 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 전송처
   113 0000C2D7 E8 0016                         		CALL	memcpy
   114 0000C2DA                                 skip:
   115 0000C2DA 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; 스택 초기치
   116 0000C2DF 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   117 0000C2E7                                 
   118 0000C2E7                                 waitkbdout:
   119 0000C2E7 E4 64                           		IN		 AL,0x64
   120 0000C2E9 24 02                           		AND		 AL,0x02
   121 0000C2EB E4 60                           		IN		 AL, 0x60 		; 빈 데이터 Read(수신 버퍼가 나쁜짓을 못하게)
   122 0000C2ED 75 F8                           		JNZ		waitkbdout		; AND결과가 0이 아니면 waitkbdout에
   123 0000C2EF C3                              		RET
   124 0000C2F0                                 
   125 0000C2F0                                 memcpy:
   126 0000C2F0 67 66 8B 06                     		MOV		EAX,[ESI]
   127 0000C2F4 66 83 C6 04                     		ADD		ESI,4
   128 0000C2F8 67 66 89 07                     		MOV		[EDI],EAX
   129 0000C2FC 66 83 C7 04                     		ADD		EDI,4
   130 0000C300 66 83 E9 01                     		SUB		ECX,1
   131 0000C304 75 EA                           		JNZ		memcpy			; 뺄셈 한 결과가 0이 아니면 memcpy에
   132 0000C306 C3                              		RET
   133 0000C307                                 ; memcpy는 주소 사이즈 prefix 넣는 것을 잊지 않으면, string명령에서도 쓸 수 있다
   134 0000C307                                 
   135 0000C307 00 00 00 00 00 00 00 00 00      		ALIGNB	16
   136 0000C310                                 GDT0:
   137 0000C310 00 00 00 00 00 00 00 00         		RESB	8				; null selector
   138 0000C318 FFFF 0000 9200 00CF             		DW		0xffff, 0x0000, 0x9200, 0x00cf	; read/write 가능 세그먼트(segment) 32bit
   139 0000C320 FFFF 0000 9A28 0047             		DW		0xffff, 0x0000, 0x9a28, 0x0047	; 실행 가능 세그먼트(segment) 32 bit(bootpack용)
   140 0000C328                                 
   141 0000C328 0000                            		DW		0
   142 0000C32A                                 GDTR0:
   143 0000C32A 0017                            		DW		8*3-1
   144 0000C32C 0000C310                        		DD		GDT0
   145 0000C330                                 
   146 0000C330                                 		ALIGNB	16
   147 0000C330                                 bootpack:
